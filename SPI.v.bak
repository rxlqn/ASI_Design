	
module SPI(
clk_in,
rst,
SPI_MISO,
SPI_MOSI,
SPI_SCLK,
SPI_CS
    );
 input    clk_in,
            rst,
            SPI_MOSI,
            SPI_CS,
            SPI_SCLK;    
 output reg SPI_MISO;


 reg [7:0]receive=0;
 reg [7:0]send=8'b11110101;
 reg [7:0]rece_buf;
 reg [7:0]send_buf;

 
 reg temp=0;
 reg [2:0] state=0 ;
 reg [5:0] cnt=0;
 reg [5:0] cnt_neg=0;
 reg [5:0] cnt_pos=0;

 reg SPI_SCLK_neg=0;
 reg SPI_SCLK_pos=0;
 reg [2:0] SPI_SCLK_r=0;

 reg SPI_cs_neg=0;
 reg SPI_cs_pos=0;
 reg [2:0] SPI_cs_r=0;
 
 	always@(posedge clk_in)			// 打两拍捕获cs上升下降沿
   begin
        SPI_cs_r<={SPI_cs_r[1:0],SPI_CS};
        SPI_cs_neg<=SPI_cs_r[2]&(~SPI_cs_r[1]);
        SPI_cs_pos<=(~SPI_cs_r[2])&SPI_cs_r[1];
   end
 	
 
	always@(posedge clk_in)			// 打两拍捕获clk上升下降沿
   begin
        SPI_SCLK_r<={SPI_SCLK_r[1:0],SPI_SCLK};
        SPI_SCLK_neg<=SPI_SCLK_r[2]&(~SPI_SCLK_r[1]);
        SPI_SCLK_pos<=(~SPI_SCLK_r[2])&SPI_SCLK_r[1];
   end

   always@(posedge clk_in)			// 模式3，下降沿采样
   begin 
	
		if(SPI_cs_neg)					// 开始通信
		begin
			state = 1;					// 状态1开始通信
			cnt_neg=0;
//			send_buf<=send;
			send_buf<=receive;	// 回环测试
			rece_buf <= 0;			// 清空缓冲区

			
		end
	
		if(state == 1)
		begin
		
			if(SPI_SCLK_neg)				// 采样主站发送的数据,MSB first
			begin
				rece_buf <= SPI_MOSI + rece_buf;
				send_buf <= send_buf<<1;
	
				cnt_neg = cnt_neg+1;
	
			end   
	
	
			if(SPI_SCLK_pos)			// 下降沿采样，上升沿准备send数据
			begin
				SPI_MISO <= send_buf[7];	// 先发送最高位
				if(cnt_neg!=0)					// 准备接收下一个bit
				begin
				rece_buf <= rece_buf<<1;
				end
			end
      end

		if(SPI_cs_pos)				// cs拉高，数据接收完成
		begin
			cnt_neg = 0;			// 清空计数器
			receive <= rece_buf;
			state = 0;				// 进入空闲状态
			
		end   
			 
   end
 
endmodule